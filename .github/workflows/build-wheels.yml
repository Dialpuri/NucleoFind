name: Build and upload wheels

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  check_versioning:
    name: Check versions match
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: |
          cd package
          mkdir checkout
          ./get_sources
          pip install . 
          python tests/test_version.py -version ${{ github.event.release.tag_name }}

  run_tests:
    name: Run Python tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Clang
        run: sudo apt-get install -y clang

      - name: Set environment variables for Clang
        run: |
          export CC=$(which clang)
          export CXX=$(which clang++)

      - name: Get sources
        run: |
          mkdir checkout
          ./get_sources
        working-directory: ./package

      - name: Install NucleoFind
        run: pip install .
        working-directory: ./package

      - name: Install pytest
        run: pip install pytest

      - name: Install NucleoFind models
        run:  |
          nucleofind-install -m nano
          nucleofind-install -m core

      - name: Run tests
        run : pytest tests
        working-directory: ./package

  build_sdist:
    needs: [ check_versioning, run_tests ]
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Move to correct directory
      run: |
        mv package/* . 
        mkdir checkout
        ./get_sources

    - name: Install Clang
      run: sudo apt-get install -y clang
        
    - name: Set environment variables for Clang
      run: |
        export CC=$(which clang)
        export CXX=$(which clang++)

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz


  build_wheels:
    needs: [ check_versioning, run_tests ]
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Download dependencies
      run:  |
        cd package
        mkdir checkout
        sh ./get_sources

    - uses: pypa/cibuildwheel@v2.16
      env:
        CIBW_BEFORE_ALL: pwd && ls
        # Cross-compile on macOS
        CIBW_ARCHS_MACOS: x86_64 arm64

        # Temporary: use pre-release Python 3.12 for stable ABI builds
        CIBW_PRERELEASE_PYTHONS: True
      with:
        package-dir: 'package'
        config-file: "{package}/pyproject.toml"

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: dist-${{ matrix.os }}


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v5

    - uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        pattern: dist-*
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  debug:
      needs: [build_wheels, upload_all]
      runs-on: ubuntu-latest
      if: ${{ failure() }}
      steps:
        - uses: actions/checkout@v3
        - name: Notify chat
          uses: teknatha136/actions-google-chat-text-message@main
          with:
            google-chat-webhook: ${{ secrets.WEBHOOK_URL }}
            text-message: ${{ github.actor }} attempted to merge a change into NucleoFind, but the automatic deployment failed.\nThis message was generated due to a ${{ github.event_name }}.\nLink ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \n