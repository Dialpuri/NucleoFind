[build-system]
requires = ["scikit-build-core >=0.4.3", "nanobind >=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "nucleofind"
dynamic = ["version"]
description = "NucleoFind: A Deep-Learning Network for Interpreting Nucleic Acid Electron Density"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Jordan Dialpuri", email = "jordan.dialpuri@york.ac.uk" },
]
classifiers = [
    "License :: OSI Approved :: BSD License",
]
dependencies=[
    'onnxruntime-gpu; platform_system != "Darwin"',
    'onnxruntime; platform_system == "Darwin"',
    'tqdm',
    'gemmi',
    'numpy',
    'requests'
]
[project.urls]
Homepage = "https://github.com/Dialpuri/NucleoFind"

[project.scripts]
nucleofind = "nucleofind.prediction.predict:run"
nucleofind-install="nucleofind.install:run"
nucleofind-clean="nucleofind.clean:run"
nucleofind-build="nucleofind.build:main"

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"



# Dynamically assign the project version from the __version__.py file
[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "src/nucleofind/__version__.py"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1
before-all = "uname -a && pwd && ls"
skip = ["pp*"] # Skip  PyPy 3.8
archs = ["auto64"] # Only target 64 bit architectures

# Run pytest to ensure that the package was correctly built
#test-command = "pytest package/tests"
#test-requires = "pytest"

# Needed for full C++17 support
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"
